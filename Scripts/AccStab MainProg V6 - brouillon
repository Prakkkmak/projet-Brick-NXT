/**************************************************
/* Programme :  'Accéléro Stabilisateur' Main Program
/* Localisation : ./
/* Objectifs : Le programme permet pour l'instant de mettre ON/OFF un systeme. Lors de l'appui d'un boutton le systeme s'active.
/*
/* Auteurs    : Lévy MARQUES, Benjamin HUSSON
/* Date      : 29/02/2016
/* Version   : Version v0.6
/**************************************************/
/* Variables */
int x,y,z; //Données accéléromètre
bool statutButton = false; //Status boutton
bool actif = true; //Status système
int degresposition;
/*************/
task scrutationButton() {      // Tâche de scrutation d'appui du bouton poussoir
        SetSensorType(S1,SENSOR_TYPE_TOUCH);//Initialisation du bouton poussoir
    SetSensorMode(S1,SENSOR_MODE_BOOL);//Initialisation du mode
    while(true){ //On capture en boucle ll'état du boutton
       statutButton=Sensor(S1);
       }
}

task affichageValeur() {  //Capture et Affiche les valeurs de l'accéllérométre (x,y,z)
        SetSensorLowspeed(S2);        //Initialisation de l'accéllérométre
        Wait(50);
        while(true) {                //Affichage infini des valeurs accéllérométre et du status de l'activation
                ReadSensorHTAccel(S2, x, y, z);
                degresposition = 0.45*x;
                TextOut(0,  LCD_LINE1, "x:     ");
                NumOut(6*2, LCD_LINE1, x);
                TextOut(0,  LCD_LINE2, "y:     ");
                NumOut(6*2, LCD_LINE2, y);
                TextOut(0,  LCD_LINE3, "z:     ");
                NumOut(6*2, LCD_LINE3, z);
                TextOut(0,  LCD_LINE5, "d:     ");
                NumOut(6*2, LCD_LINE5, degresposition);
                if(actif) { // Affichage de l'état du système
                        TextOut(0, LCD_LINE4, "SYSTEME EN MARCHE");
                }
                else {
                        TextOut(0, LCD_LINE4, "SYSTEME EN ARRET");
                }
    Wait(100);
        }
}

task systemActif(){ //Affecte la variable d'activation en fonction du status du bouton poussoir

        actif = true; // Variable stabilization OK/NOT OK

        while (true){
                if (statutButton == true){ //Si le boutton est activé
                        if(actif == true){ // Si le systeme est déjà actif
                                actif = false; // Le systeme se désactive
                                Wait(500);
                        }
                        else{
                                actif = true; // Si le système n'est pas actif
                                Wait(500); // Le système s'active
                        }
                }
        }

}


task stabilisationV1(){
   int zoneMorte,puissance,degresposition;
   int degres;
   zoneMorte=15;
   puissance=25;
   degres=2;
   degresposition=1/2*x;
   while (true){
            degresposition=0.45*x;
            if (degresposition < 30){
             puissance = 15;
            }
            else{
             puissance = 40;
            }
            if (actif == true){

            if(degresposition >10){
             OnFwd(OUT_A,(-puissance));
            }

            if(degresposition < (-10)){
             OnFwd(OUT_A,puissance);
            }

            if(degresposition > (-10) && degresposition < 10){
             Off(OUT_A);
            }

					}


				/*
					// ETAT de stabilisation a moins de 20°
                     if (x > zoneMorte && x < 45){
                              RotateMotorPID(OUT_A,puissance,-degres,40,40,90);
                     }
                     else if ( x < (-zoneMorte) && x > -45 ){
            RotateMotorPID(OUT_A,puissance,degres,40,40,90);
					}

					// ETAT de stabilisation a + de 20°
                     if (x > zoneMorte && x > 45){
                              RotateMotorPID(OUT_A,50,(2*x)+5,40,40,90);
                     }
                     else if ( x < (-zoneMorte) && x < -45 ){
            RotateMotorPID(OUT_A,50,(2*x)-5,40,40,90);
					}
					*/




    }
}


task main(){
         Precedes(scrutationButton,affichageValeur,systemActif,stabilisationV1); // Activation des différentes tâches
}
